name: DevSecOps CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest bandit safety

    # Step 4: Run Unit Tests
    - name: Run Unit Tests
      run: pytest -v

    # Step 5: Run Security Scan (Bandit)
    - name: Run Security Scan (Bandit)
      run: |
        echo "Running security scan with Bandit..."
        bandit -r app/ -f txt -o bandit_report.txt || true
  docker-security-scan:
    name: Trivy Container Security Scan
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t devsecops-demo .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'devsecops-demo'
          format: 'table'
          exit-code: '0'  # Donâ€™t fail the pipeline on findings (set to 1 to fail on vulnerabilities)
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

    # Step 6: Upload Bandit Report
    - name: Upload Bandit Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: bandit_report.txt

    # Step 7: Run Dependency Vulnerability Scan (Safety)
    - name: Run Dependency Vulnerability Scan (Safety)
      run: |
        echo "Running dependency vulnerability scan with Safety..."
        safety scan -r requirements.txt --output text --save-json safety_report.json || true

    # Step 8: Upload Safety Report
    - name: Upload Safety Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: safety-dependency-report
        path: safety_report.json

